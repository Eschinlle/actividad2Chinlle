version: '3.8'

services:
  # Servicio de base de datos MySQL
  db:
    image: mysql:8.0
    container_name: fintech-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: fintech_db
      MYSQL_USER: fintech_user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "fintech_user", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de backend con Node.js y Express
  backend:
    build: ./backend
    container_name: fintech-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 3000
      DB_HOST: db
      DB_USER: fintech_user
      DB_PASSWORD: password
      DB_NAME: fintech_db
    ports:
      - "3000:3000"
    networks:
      - fintech-network

  # Servicio de frontend con Nginx
  frontend:
    build: ./frontend
    container_name: fintech-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8080:80"
    networks:
      - fintech-network

# Definición de la red para comunicación entre contenedores
networks:
  fintech-network:
    driver: bridge

# Definición del volumen para persistencia de datos
volumes:
  mysql-data:
    # Usar un nombre específico para garantizar su persistencia
    name: fintech-mysql-data
